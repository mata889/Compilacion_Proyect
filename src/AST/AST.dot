digraph {
"102,Start" -> "101,body";
"101,body" -> "1,declaracion de variable";
"1,declaracion de variable" -> "2,var";
"1,declaracion de variable" -> "0,entero";
"1,declaracion de variable" -> "4,id";
"4,id" -> "5,numGlobal";
"101,body" -> "94,declaración de funcion";
"94,declaración de funcion" -> "95,función";
"94,declaración de funcion" -> "96,void";
"94,declaración de funcion" -> "97,id";
"97,id" -> "98,main";
"94,declaración de funcion" -> "100,parametros";
"100,parametros" -> "99,Vacio";
"94,declaración de funcion" -> "93,body";
"93,body" -> "8,declaracion de variable";
"8,declaracion de variable" -> "9,var";
"8,declaracion de variable" -> "7,entero";
"8,declaracion de variable" -> "11,id";
"11,id" -> "12,varchar";
"93,body" -> "23,asignacion";
"23,asignacion" -> "24,id";
"24,id" -> "25,varchar";
"23,asignacion" -> "21,valor";
"21,valor" -> "13,num";
"13,num" -> "14,0";
"93,body" -> "27,declaracion y asignacion";
"27,declaracion y asignacion" -> "28,var";
"27,declaracion y asignacion" -> "26,caracter";
"27,declaracion y asignacion" -> "30,id";
"30,id" -> "31,varExeter";
"27,declaracion y asignacion" -> "32,valor";
"32,valor" -> "33,letter";
"33,letter" -> "34,'a'";
"93,body" -> "36,declaracion y asignacion";
"36,declaracion y asignacion" -> "37,var";
"36,declaracion y asignacion" -> "35,booleano";
"36,declaracion y asignacion" -> "39,id";
"39,id" -> "40,varEchelon";
"36,declaracion y asignacion" -> "41,valor";
"41,valor" -> "42,bool";
"42,bool" -> "43,True";
"93,body" -> "83,declaracion y asignacion expresión";
"83,declaracion y asignacion expresión" -> "84,var";
"83,declaracion y asignacion expresión" -> "44,entero";
"83,declaracion y asignacion expresión" -> "86,id";
"86,id" -> "87,x";
"83,declaracion y asignacion expresión" -> "81,expresión";
"81,expresión" -> "45,num";
"45,num" -> "46,5";
"81,expresión" -> "47,#";
"81,expresión" -> "79,+";
"79,+" -> "51,id";
"51,id" -> "52,varchar";
"79,+" -> "73,/";
"73,/" -> "69,expresión";
"69,expresión" -> "53,num";
"53,num" -> "54,5";
"69,expresión" -> "55,#";
"69,expresión" -> "67,-";
"67,-" -> "59,num";
"59,num" -> "60,2";
"67,-" -> "61,#";
"67,-" -> "65,#";
"73,/" -> "71,#";
"79,+" -> "77,#";

}